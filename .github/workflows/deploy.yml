name: Deploy to Linux Server

on:
  push:
    branches:
      - main # 또는 코드를 푸시하는 브랜치 이름 (예: master, develop)

jobs:
  build-and-deploy:
    permissions:
      contents: write
    #runs-on: ubuntu-latest
    runs-on: [general-skccmygit-action-runner6]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17 # 필요에 따라 Java 버전 변경 가능
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Get JAR file name
      id: get_jar_name
      run: echo "::set-output name=jar_name::$(basename $(find target -name '*.jar' ! -name '*tests.jar'))"

    - name: Copy JAR to project root
      run: cp target/$(basename $(find target -name '*.jar' ! -name '*tests.jar')) .

    - name: Deploy JAR to server
      uses: appleboy/scp-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "${{ steps.get_jar_name.outputs.jar_name }}"
        target: "/home/azureuser/mgmt/log-viewer" # <-- 서버에 JAR 파일을 업로드할 경로로 변경하세요.

    - name: Execute on server
      uses: appleboy/ssh-action@v0.1.9
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          JAR_NAME="${{ steps.get_jar_name.outputs.jar_name }}"
          cd /home/azureuser/mgmt/log-viewer
          PID=$(ps -ef | grep "$JAR_NAME" | grep -v grep | awk '{print $2}')
          if [ -n "$PID" ]; then
            echo "기존 프로세스($PID)를 종료합니다."
            kill -9 $PID
            sleep 1
          fi
          echo "$JAR_NAME 실행을 시작합니다..."
          nohup java -jar "$JAR_NAME" > app.log 2>&1 &
          echo "실행 완료. 로그는 app.log 에 저장됩니다."

    - name: Create Release and Upload JAR
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        files: ${{ steps.get_jar_name.outputs.jar_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 